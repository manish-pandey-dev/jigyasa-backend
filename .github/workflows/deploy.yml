name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  REGION: ${{ secrets.GCP_REGION }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -c "from app.main import app; print('âœ… App imports successfully')"
        echo "âœ… Basic tests passed"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for GCP
      run: gcloud auth configure-docker

    - name: Build and Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --source . \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 8080 \
          --set-env-vars="ENVIRONMENT=production" \
          --memory=1Gi \
          --cpu=1 \
          --max-instances=10 \
          --timeout=300

    - name: Get Service URL
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(status.url)")
        echo "ðŸš€ Service deployed at: $SERVICE_URL"
        echo "ðŸ“‹ Health check: $SERVICE_URL/health"
        echo "ðŸ“– API docs: $SERVICE_URL/docs"